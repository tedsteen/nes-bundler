name: Release

on:
  push:

jobs:  
  build:
    name: Build ${{ matrix.name }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [
          linux,
          windows,
          macos-x86,
          macos-arm
        ]
        include:
          - name: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            file-ending: ".exe"
          - name: macos-x86
            os: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm
            os: macos-latest
            target: aarch64-apple-darwin
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install latest rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt-get update && sudo apt-get -y install libatk1.0-dev libgtk-3-dev libsdl2-dev

    - name: Build (with Netplay)
      run: cargo install --target ${{ matrix.target }} --features "netplay zip-bundle" --path . --root ./out

    - name: Rename
      run: cp out/bin/nes-bundler${{ matrix.file-ending }} nes-bundler-${{ matrix.name }}-${{ github.ref_name }}${{ matrix.file-ending }}
    
    - name: Build (without Netplay)
      run: cargo install --target ${{ matrix.target }} --features "zip-bundle" --path . --root ./out

    - name: Rename
      run: cp out/bin/nes-bundler${{ matrix.file-ending }} nes-bundler-${{ matrix.name }}-no-netplay-${{ github.ref_name }}${{ matrix.file-ending }}

    - name: Codesign executable
      if: ${{ startsWith(matrix.os, 'macos') }}
      env: 
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        security create-keychain -p password build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p password build.keychain
        security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k password build.keychain
        /usr/bin/codesign --force -s BF7E84BDA9B9A580B3CA909530AC85693BBA287E nes-bundler-${{ matrix.name }}* -v

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.name }}
        path: nes-bundler-${{ matrix.name }}*
  
  release:
    name: Release
    needs: build
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: nes-bundler*
          
